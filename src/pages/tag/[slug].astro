---
import DefaultPageLayout from "$/layouts/default.astro";
import PostPreview from "$components/PostPreview.astro";
import { getAllPosts, getAllTags, getSettings } from "$/utils/api";
import { getGhostImgPath } from "$/utils";

export async function getStaticPaths({}) {
  const { posts } = await getAllPosts({ include: "authors,tags" });
  const { tags } = await getAllTags({ include: "count.posts" });
  const { settings } = await getSettings();

  return tags.map((tag) => {
    const filteredPosts = posts.filter((post) =>
      post.tags.map((tag) => tag.slug).includes(tag.slug)
    );
    return {
      params: { slug: tag.slug },
      props: {
        posts: filteredPosts,
        settings,
        tag,
      },
    };
  });
}

const { posts, settings, tag } = Astro.props;
const { params } = Astro.request;
---

<DefaultPageLayout
  bodyClass={`tag-template tag-${tag.slug}`}
  content={{ title: `Posts by Tag: ${params.tag}`, description: `all of the articles we've posted and linked so far under the tag: ${params.tag}` }}
  {settings}>
  <main id="site-main" class="site-main outer">
    <div class="inner posts">
      <div class="post-feed">
        <section class="post-card post-card-large">
          {tag.feature_image && <div class="post-card-image-link">
              <img class="post-card-image" srcset={`${getGhostImgPath(settings.url, tag.feature_image, 300)} 300w,
                          ${getGhostImgPath(settings.url, tag.feature_image, 600)}  600w,
                          ${getGhostImgPath(settings.url, tag.feature_image, 1000)}  1000w,
                          ${getGhostImgPath(settings.url, tag.feature_image, 2000)} 2000w`} sizes="(max-width: 1000px) 400px, 800px" src={getGhostImgPath(settings.url, tag.feature_image, 600)} alt={tag.title} loading="lazy" />
            </div>}
          <div class="post-card-content">
            <div class="post-card-content-link">
              <header class="post-card-header">
                <div class="post-card-primary-tag">Tagged</div>
                <h2 class="post-card-title">{tag.name}</h2>
              </header>
              <div class="post-card-excerpt">
                <p>
                  {tag.description ? tag.description : `A collection of ${tag.count.posts} Post${tag.count.posts > 1 ? "s" : ""}`}
                </p>
              </div>
            </div>
          </div>
        </section>
        {posts.map( (post, index) => <PostPreview post={post} index={index} settings={settings} /> )}
      </div>
    </div>
  </main>
</DefaultPageLayout>

<style lang="scss">
  .post-feed {
    position: relative;
    display: grid;
    grid-gap: 4vmin;
    grid-template-columns: 1fr 1fr 1fr;
    padding: 4vmin 0;
  }

  @media (max-width: 1000px) {
    .post-feed {
      grid-template-columns: 1fr 1fr;
    }
  }
  @media (max-width: 700px) {
    .post-feed {
      grid-template-columns: 1fr;
      grid-gap: 40px;
    }
  }

  .post-card {
    position: relative;
    flex: 1 1 301px;
    display: flex;
    flex-direction: column;
    min-height: 220px;
    background-size: cover;
    word-break: break-word;
  }

  .post-card-image-link {
    position: relative;
    display: block;
    overflow: hidden;
    border-radius: 3px;
  }

  .post-card-image {
    width: 100%;
    height: 200px;
    background: var(--color-lightgrey) no-repeat center center;

    object-fit: cover;
  }

  .post-card-content-link {
    position: relative;
    display: block;
    color: var(--color-darkgrey);
  }

  .post-card-content-link:hover {
    text-decoration: none;
  }

  .post-card-header {
    margin: 20px 0 0;
  }

  .post-feed .no-image .post-card-content-link {
    padding: 0;
  }

  .no-image .post-card-header {
    margin-top: 0;
  }

  .post-card-primary-tag {
    margin: 0 0 0.2em;
    color: var(--ghost-accent-color);
    font-size: 1.2rem;
    font-weight: 500;
    letter-spacing: 0.2px;
    text-transform: uppercase;
  }

  .post-card-title {
    margin: 0 0 0.4em;
    font-size: 2.4rem;
    transition: color 0.2s ease-in-out;
  }

  .no-image .post-card-title {
    margin-top: 0;
  }

  .post-card-content {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .post-card-excerpt p {
    margin-bottom: 1em;
    display: -webkit-box;
    overflow-y: hidden;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    word-break: break-word;
  }

  .post-card-meta {
    display: flex;
    align-items: center;
    padding: 0;
  }
  @media (min-width: 1001px) {
    .post-card-large {
      grid-column: 1 / span 3;
      display: grid;
      grid-gap: 4vmin;
      grid-template-columns: 1fr 1fr 1fr;
      min-height: 280px;
      border-top: 0;
    }

    .post-card-large:not(.no-image) .post-card-header {
      margin-top: 0;
    }

    .post-card-large .post-card-image-link {
      position: relative;
      grid-column: 1 / span 2;
      margin-bottom: 0;
      min-height: 380px;
    }

    .post-card-large .post-card-image {
      position: absolute;
      width: 100%;
      height: 100%;
    }

    .post-card-large .post-card-content {
      justify-content: center;
    }

    .post-card-large .post-card-title {
      margin-top: 0;
      font-size: 3.2rem;
    }

    .post-card-large .post-card-excerpt p {
      margin-bottom: 1.5em;
      font-size: 1.7rem;
      line-height: 1.55em;
      -webkit-line-clamp: 8;
    }
  }
  .tag-template .post-card-large .post-card-image-link {
    grid-column: 2 / span 2;
    order: 2;
  }

  .tag-template .post-card-large .post-card-content {
    order: 1;
  }
</style>
